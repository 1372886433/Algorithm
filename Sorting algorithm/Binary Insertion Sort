    /**
     * Sort the arr from the smallest to the largest.
     *
     * @param arr the array to be sorted. The element at index 0 should be a sentinel.
     * @throws NullPointerException if the arr point to null.
     */
    public static void binaryInsertionSort(int[] arr) {
        if (arr == null) throw new NullPointerException();
        if (arr.length == 0) return;
        // the index 0 is a sentinel and the index 1 doesn't need to be sorted.
        for (int i = 2; i < arr.length; i++) {
            arr[0] = arr[i];
            int low = 0;
            int high = i;
            int mid;
            while (low < high - 1) {
                mid = (low + high) / 2;
                if (arr[mid] >= arr[0]) {
                    high = mid;
                } else {
                    low = mid;
                }
            }
            for (int j = i - 1; j >= high; j--) {
                arr[j + 1] = arr[j];
            }
            arr[high] = arr[0];
        }
        arr[0] = 0;
    }
